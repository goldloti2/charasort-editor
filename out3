<class 'calmjs.parse.factory.ExprStatement'>
dataSetVersion = "2025-05-31";
<class 'calmjs.parse.factory.Assign'>
dataSetVersion = "2025-05-31"
<class 'calmjs.parse.factory.Identifier'>
dataSetVersion
<class 'calmjs.parse.factory.String'>
"2025-05-31"
<class 'calmjs.parse.factory.ExprStatement'>
dataSet[dataSetVersion] = {};
<class 'calmjs.parse.factory.Assign'>
dataSet[dataSetVersion] = {}
<class 'calmjs.parse.factory.BracketAccessor'>
dataSet[dataSetVersion]
<class 'calmjs.parse.factory.Identifier'>
dataSet
<class 'calmjs.parse.factory.Identifier'>
dataSetVersion
<class 'calmjs.parse.factory.Object'>
{}
<class 'calmjs.parse.factory.ExprStatement'>
dataSet[dataSetVersion].options = [{
  name: "Filter by Type",
  key: "type",
  tooltip: "Check this to restrict to characters attack type.",
  checked: false,
  sub: [{
    name: "Glacio",
    key: "glacio"
  }, {
    name: "Fusion",
    key: "fusion"
  }, {
    name: "Electro",
    key: "electro"
  }, {
    name: "Aero",
    key: "aero"
  }, {
    name: "Spectro",
    key: "spectro"
  }, {
    name: "Havoc",
    key: "havoc"
  }]
}, {
  name: "Exclude Rover",
  key: "rover",
  tooltip: "Check this to not sorting with Rover.",
  checked: true
}];
<class 'calmjs.parse.factory.Assign'>
dataSet[dataSetVersion].options = [{
  name: "Filter by Type",
  key: "type",
  tooltip: "Check this to restrict to characters attack type.",
  checked: false,
  sub: [{
    name: "Glacio",
    key: "glacio"
  }, {
    name: "Fusion",
    key: "fusion"
  }, {
    name: "Electro",
    key: "electro"
  }, {
    name: "Aero",
    key: "aero"
  }, {
    name: "Spectro",
    key: "spectro"
  }, {
    name: "Havoc",
    key: "havoc"
  }]
}, {
  name: "Exclude Rover",
  key: "rover",
  tooltip: "Check this to not sorting with Rover.",
  checked: true
}]
<class 'calmjs.parse.factory.DotAccessor'>
dataSet[dataSetVersion].options
<class 'calmjs.parse.factory.BracketAccessor'>
dataSet[dataSetVersion]
<class 'calmjs.parse.factory.Identifier'>
dataSet
<class 'calmjs.parse.factory.Identifier'>
dataSetVersion
<class 'calmjs.parse.factory.PropIdentifier'>
options
<class 'calmjs.parse.factory.Array'>
[{
  name: "Filter by Type",
  key: "type",
  tooltip: "Check this to restrict to characters attack type.",
  checked: false,
  sub: [{
    name: "Glacio",
    key: "glacio"
  }, {
    name: "Fusion",
    key: "fusion"
  }, {
    name: "Electro",
    key: "electro"
  }, {
    name: "Aero",
    key: "aero"
  }, {
    name: "Spectro",
    key: "spectro"
  }, {
    name: "Havoc",
    key: "havoc"
  }]
}, {
  name: "Exclude Rover",
  key: "rover",
  tooltip: "Check this to not sorting with Rover.",
  checked: true
}]
<class 'calmjs.parse.factory.Object'>
{
  name: "Filter by Type",
  key: "type",
  tooltip: "Check this to restrict to characters attack type.",
  checked: false,
  sub: [{
    name: "Glacio",
    key: "glacio"
  }, {
    name: "Fusion",
    key: "fusion"
  }, {
    name: "Electro",
    key: "electro"
  }, {
    name: "Aero",
    key: "aero"
  }, {
    name: "Spectro",
    key: "spectro"
  }, {
    name: "Havoc",
    key: "havoc"
  }]
}
<class 'calmjs.parse.factory.Assign'>
name: "Filter by Type"
<class 'calmjs.parse.factory.PropIdentifier'>
name
<class 'calmjs.parse.factory.String'>
"Filter by Type"
<class 'calmjs.parse.factory.Assign'>
key: "type"
<class 'calmjs.parse.factory.PropIdentifier'>
key
<class 'calmjs.parse.factory.String'>
"type"
<class 'calmjs.parse.factory.Assign'>
tooltip: "Check this to restrict to characters attack type."
<class 'calmjs.parse.factory.PropIdentifier'>
tooltip
<class 'calmjs.parse.factory.String'>
"Check this to restrict to characters attack type."
<class 'calmjs.parse.factory.Assign'>
checked: false
<class 'calmjs.parse.factory.PropIdentifier'>
checked
<class 'calmjs.parse.factory.Boolean'>
false
<class 'calmjs.parse.factory.Assign'>
sub: [{
  name: "Glacio",
  key: "glacio"
}, {
  name: "Fusion",
  key: "fusion"
}, {
  name: "Electro",
  key: "electro"
}, {
  name: "Aero",
  key: "aero"
}, {
  name: "Spectro",
  key: "spectro"
}, {
  name: "Havoc",
  key: "havoc"
}]
<class 'calmjs.parse.factory.PropIdentifier'>
sub
<class 'calmjs.parse.factory.Array'>
[{
  name: "Glacio",
  key: "glacio"
}, {
  name: "Fusion",
  key: "fusion"
}, {
  name: "Electro",
  key: "electro"
}, {
  name: "Aero",
  key: "aero"
}, {
  name: "Spectro",
  key: "spectro"
}, {
  name: "Havoc",
  key: "havoc"
}]
<class 'calmjs.parse.factory.Object'>
{
  name: "Glacio",
  key: "glacio"
}
<class 'calmjs.parse.factory.Assign'>
name: "Glacio"
<class 'calmjs.parse.factory.PropIdentifier'>
name
<class 'calmjs.parse.factory.String'>
"Glacio"
<class 'calmjs.parse.factory.Assign'>
key: "glacio"
<class 'calmjs.parse.factory.PropIdentifier'>
key
<class 'calmjs.parse.factory.String'>
"glacio"
<class 'calmjs.parse.factory.Object'>
{
  name: "Fusion",
  key: "fusion"
}
<class 'calmjs.parse.factory.Assign'>
name: "Fusion"
<class 'calmjs.parse.factory.PropIdentifier'>
name
<class 'calmjs.parse.factory.String'>
"Fusion"
<class 'calmjs.parse.factory.Assign'>
key: "fusion"
<class 'calmjs.parse.factory.PropIdentifier'>
key
<class 'calmjs.parse.factory.String'>
"fusion"
<class 'calmjs.parse.factory.Object'>
{
  name: "Electro",
  key: "electro"
}
<class 'calmjs.parse.factory.Assign'>
name: "Electro"
<class 'calmjs.parse.factory.PropIdentifier'>
name
<class 'calmjs.parse.factory.String'>
"Electro"
<class 'calmjs.parse.factory.Assign'>
key: "electro"
<class 'calmjs.parse.factory.PropIdentifier'>
key
<class 'calmjs.parse.factory.String'>
"electro"
<class 'calmjs.parse.factory.Object'>
{
  name: "Aero",
  key: "aero"
}
<class 'calmjs.parse.factory.Assign'>
name: "Aero"
<class 'calmjs.parse.factory.PropIdentifier'>
name
<class 'calmjs.parse.factory.String'>
"Aero"
<class 'calmjs.parse.factory.Assign'>
key: "aero"
<class 'calmjs.parse.factory.PropIdentifier'>
key
<class 'calmjs.parse.factory.String'>
"aero"
<class 'calmjs.parse.factory.Object'>
{
  name: "Spectro",
  key: "spectro"
}
<class 'calmjs.parse.factory.Assign'>
name: "Spectro"
<class 'calmjs.parse.factory.PropIdentifier'>
name
<class 'calmjs.parse.factory.String'>
"Spectro"
<class 'calmjs.parse.factory.Assign'>
key: "spectro"
<class 'calmjs.parse.factory.PropIdentifier'>
key
<class 'calmjs.parse.factory.String'>
"spectro"
<class 'calmjs.parse.factory.Object'>
{
  name: "Havoc",
  key: "havoc"
}
<class 'calmjs.parse.factory.Assign'>
name: "Havoc"
<class 'calmjs.parse.factory.PropIdentifier'>
name
<class 'calmjs.parse.factory.String'>
"Havoc"
<class 'calmjs.parse.factory.Assign'>
key: "havoc"
<class 'calmjs.parse.factory.PropIdentifier'>
key
<class 'calmjs.parse.factory.String'>
"havoc"
<class 'calmjs.parse.factory.Object'>
{
  name: "Exclude Rover",
  key: "rover",
  tooltip: "Check this to not sorting with Rover.",
  checked: true
}
<class 'calmjs.parse.factory.Assign'>
name: "Exclude Rover"
<class 'calmjs.parse.factory.PropIdentifier'>
name
<class 'calmjs.parse.factory.String'>
"Exclude Rover"
<class 'calmjs.parse.factory.Assign'>
key: "rover"
<class 'calmjs.parse.factory.PropIdentifier'>
key
<class 'calmjs.parse.factory.String'>
"rover"
<class 'calmjs.parse.factory.Assign'>
tooltip: "Check this to not sorting with Rover."
<class 'calmjs.parse.factory.PropIdentifier'>
tooltip
<class 'calmjs.parse.factory.String'>
"Check this to not sorting with Rover."
<class 'calmjs.parse.factory.Assign'>
checked: true
<class 'calmjs.parse.factory.PropIdentifier'>
checked
<class 'calmjs.parse.factory.Boolean'>
true
<class 'calmjs.parse.factory.ExprStatement'>
dataSet[dataSetVersion].characterData = [{
  name: "Verina",
  img: "T_IconRoleHead256_3_UI.webp",
  opts: {
    type: ["spectro"],
    weapon: ["rectifier"],
    rarity: ["s5"],
    version: ["10"],
    gender: ["female"]
  }
}, {
  name: "Male Rover",
  img: "T_IconRoleHead256_4_UI.webp",
  opts: {
    type: ["spectro", "spectro", "aero"],
    weapon: ["sword"],
    rarity: ["s5"],
    version: ["10"],
    gender: ["female"],
    rover: true
  }
}];
<class 'calmjs.parse.factory.Assign'>
dataSet[dataSetVersion].characterData = [{
  name: "Verina",
  img: "T_IconRoleHead256_3_UI.webp",
  opts: {
    type: ["spectro"],
    weapon: ["rectifier"],
    rarity: ["s5"],
    version: ["10"],
    gender: ["female"]
  }
}, {
  name: "Male Rover",
  img: "T_IconRoleHead256_4_UI.webp",
  opts: {
    type: ["spectro", "spectro", "aero"],
    weapon: ["sword"],
    rarity: ["s5"],
    version: ["10"],
    gender: ["female"],
    rover: true
  }
}]
<class 'calmjs.parse.factory.DotAccessor'>
dataSet[dataSetVersion].characterData
<class 'calmjs.parse.factory.BracketAccessor'>
dataSet[dataSetVersion]
<class 'calmjs.parse.factory.Identifier'>
dataSet
<class 'calmjs.parse.factory.Identifier'>
dataSetVersion
<class 'calmjs.parse.factory.PropIdentifier'>
characterData
<class 'calmjs.parse.factory.Array'>
[{
  name: "Verina",
  img: "T_IconRoleHead256_3_UI.webp",
  opts: {
    type: ["spectro"],
    weapon: ["rectifier"],
    rarity: ["s5"],
    version: ["10"],
    gender: ["female"]
  }
}, {
  name: "Male Rover",
  img: "T_IconRoleHead256_4_UI.webp",
  opts: {
    type: ["spectro", "spectro", "aero"],
    weapon: ["sword"],
    rarity: ["s5"],
    version: ["10"],
    gender: ["female"],
    rover: true
  }
}]
<class 'calmjs.parse.factory.Object'>
{
  name: "Verina",
  img: "T_IconRoleHead256_3_UI.webp",
  opts: {
    type: ["spectro"],
    weapon: ["rectifier"],
    rarity: ["s5"],
    version: ["10"],
    gender: ["female"]
  }
}
<class 'calmjs.parse.factory.Assign'>
name: "Verina"
<class 'calmjs.parse.factory.PropIdentifier'>
name
<class 'calmjs.parse.factory.String'>
"Verina"
<class 'calmjs.parse.factory.Assign'>
img: "T_IconRoleHead256_3_UI.webp"
<class 'calmjs.parse.factory.PropIdentifier'>
img
<class 'calmjs.parse.factory.String'>
"T_IconRoleHead256_3_UI.webp"
<class 'calmjs.parse.factory.Assign'>
opts: {
  type: ["spectro"],
  weapon: ["rectifier"],
  rarity: ["s5"],
  version: ["10"],
  gender: ["female"]
}
<class 'calmjs.parse.factory.PropIdentifier'>
opts
<class 'calmjs.parse.factory.Object'>
{
  type: ["spectro"],
  weapon: ["rectifier"],
  rarity: ["s5"],
  version: ["10"],
  gender: ["female"]
}
<class 'calmjs.parse.factory.Assign'>
type: ["spectro"]
<class 'calmjs.parse.factory.PropIdentifier'>
type
<class 'calmjs.parse.factory.Array'>
["spectro"]
<class 'calmjs.parse.factory.String'>
"spectro"
<class 'calmjs.parse.factory.Assign'>
weapon: ["rectifier"]
<class 'calmjs.parse.factory.PropIdentifier'>
weapon
<class 'calmjs.parse.factory.Array'>
["rectifier"]
<class 'calmjs.parse.factory.String'>
"rectifier"
<class 'calmjs.parse.factory.Assign'>
rarity: ["s5"]
<class 'calmjs.parse.factory.PropIdentifier'>
rarity
<class 'calmjs.parse.factory.Array'>
["s5"]
<class 'calmjs.parse.factory.String'>
"s5"
<class 'calmjs.parse.factory.Assign'>
version: ["10"]
<class 'calmjs.parse.factory.PropIdentifier'>
version
<class 'calmjs.parse.factory.Array'>
["10"]
<class 'calmjs.parse.factory.String'>
"10"
<class 'calmjs.parse.factory.Assign'>
gender: ["female"]
<class 'calmjs.parse.factory.PropIdentifier'>
gender
<class 'calmjs.parse.factory.Array'>
["female"]
<class 'calmjs.parse.factory.String'>
"female"
<class 'calmjs.parse.factory.Object'>
{
  name: "Male Rover",
  img: "T_IconRoleHead256_4_UI.webp",
  opts: {
    type: ["spectro", "spectro", "aero"],
    weapon: ["sword"],
    rarity: ["s5"],
    version: ["10"],
    gender: ["female"],
    rover: true
  }
}
<class 'calmjs.parse.factory.Assign'>
name: "Male Rover"
<class 'calmjs.parse.factory.PropIdentifier'>
name
<class 'calmjs.parse.factory.String'>
"Male Rover"
<class 'calmjs.parse.factory.Assign'>
img: "T_IconRoleHead256_4_UI.webp"
<class 'calmjs.parse.factory.PropIdentifier'>
img
<class 'calmjs.parse.factory.String'>
"T_IconRoleHead256_4_UI.webp"
<class 'calmjs.parse.factory.Assign'>
opts: {
  type: ["spectro", "spectro", "aero"],
  weapon: ["sword"],
  rarity: ["s5"],
  version: ["10"],
  gender: ["female"],
  rover: true
}
<class 'calmjs.parse.factory.PropIdentifier'>
opts
<class 'calmjs.parse.factory.Object'>
{
  type: ["spectro", "spectro", "aero"],
  weapon: ["sword"],
  rarity: ["s5"],
  version: ["10"],
  gender: ["female"],
  rover: true
}
<class 'calmjs.parse.factory.Assign'>
type: ["spectro", "spectro", "aero"]
<class 'calmjs.parse.factory.PropIdentifier'>
type
<class 'calmjs.parse.factory.Array'>
["spectro", "spectro", "aero"]
<class 'calmjs.parse.factory.String'>
"spectro"
<class 'calmjs.parse.factory.String'>
"spectro"
<class 'calmjs.parse.factory.String'>
"aero"
<class 'calmjs.parse.factory.Assign'>
weapon: ["sword"]
<class 'calmjs.parse.factory.PropIdentifier'>
weapon
<class 'calmjs.parse.factory.Array'>
["sword"]
<class 'calmjs.parse.factory.String'>
"sword"
<class 'calmjs.parse.factory.Assign'>
rarity: ["s5"]
<class 'calmjs.parse.factory.PropIdentifier'>
rarity
<class 'calmjs.parse.factory.Array'>
["s5"]
<class 'calmjs.parse.factory.String'>
"s5"
<class 'calmjs.parse.factory.Assign'>
version: ["10"]
<class 'calmjs.parse.factory.PropIdentifier'>
version
<class 'calmjs.parse.factory.Array'>
["10"]
<class 'calmjs.parse.factory.String'>
"10"
<class 'calmjs.parse.factory.Assign'>
gender: ["female"]
<class 'calmjs.parse.factory.PropIdentifier'>
gender
<class 'calmjs.parse.factory.Array'>
["female"]
<class 'calmjs.parse.factory.String'>
"female"
<class 'calmjs.parse.factory.Assign'>
rover: true
<class 'calmjs.parse.factory.PropIdentifier'>
rover
<class 'calmjs.parse.factory.Boolean'>
true
